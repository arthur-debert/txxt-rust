Unicode + Inline Marker Tokenization Issue Summary
================================================

Root Cause Analysis:

1. Current Behavior:
   - The @ sign is listed in `is_special_delimiter()`, which causes it to always terminate text tokens
   - When tokenizing "ðŸŽ‰@citation", it produces: Text("ðŸŽ‰"), AtSign, Text("citation")
   - For underscores, there's special logic that includes them in text tokens when followed by alphanumeric

2. Test Expectations:
   - test_all_tokenizers_with_emoji expects "ðŸŽ‰@citation" to be a single Text token
   - test_reference_markers_unicode expects to find LeftBracket tokens, but gets RefMarker tokens instead

3. Specification Analysis:
   - @ signs are only meaningful inside brackets as citations: [@key]
   - Standalone @ signs (not in brackets) don't have special meaning in txxt
   - Therefore, @ should not be a delimiter when it appears in regular text

4. The Issues:
   
   Issue 1: @ sign handling
   - @ is incorrectly treated as a special delimiter that breaks text tokens
   - It should only be special inside [...] brackets for citations
   
   Issue 2: Test confusion
   - test_reference_markers_unicode is looking for LeftBracket tokens but the lexer produces higher-level RefMarker tokens
   - This is a test design issue - it should either look for RefMarker tokens or use raw bracket input

Recommended Fix:

1. Remove @ from `is_special_delimiter()` function
2. Handle @ signs contextually - only treat them specially inside brackets
3. Update test_reference_markers_unicode to look for RefMarker tokens instead of LeftBracket tokens

This would make @ signs behave like regular text characters outside of [...] contexts, which seems to be the intended behavior based on the test expectations.