1. Main Topic

    This is the introduction to the main topic. It provides an overview before diving into specific subtopics.

    1.1. First Subtopic
    
        This subsection explores the first aspect of the main topic in detail. Notice how it is indented one level deeper than the main section.

        Parser ::
            A program that analyzes text according to formal grammar rules to create a structured representation like an Abstract Syntax Tree.

        Lexer ::
            A program that breaks down text into tokens, which are the smallest meaningful units of the language being processed.

    1.2. Second Subtopic
    
        This subsection covers the second aspect. The hierarchical numbering (1.1, 1.2) makes the structure clear.

        And one of the sessions will be three level deep.

        1.2.1. Third Subtopic


            AST ::
                Abstract Syntax Tree - a tree representation of the syntactic structure of source code or text, where each node represents a construct occurring in the source.

            This is the deepest level of nesting, demonstrating how definitions can appear at any level of the document hierarchy.
			
2. Another Main Topic

    This second main topic is at the same level as the first, demonstrating how nested and flat structures can combine.

    Compiler ::
        A program that translates source code written in one programming language into another language, typically machine code or bytecode.
