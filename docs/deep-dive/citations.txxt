:: title :: Proposal: A System for Robust Citations
:: author :: Gemini
:: status :: Proposed

This document proposes a system for handling academic citations that integrates with the existing ecosystem of reference managers.

1. The Goal: "Integrating Well"

    For `txxt` to handle citations effectively, it must "integrate well" with the tools and workflows that researchers already use. This means `txxt` should *not* become a citation manager or a citation stylist. Instead, it should provide the simplest possible hooks to connect a document to an external, standard-format citation database.

    The core principles are:
    - **`txxt` does not manage citation data.** The data must live in standard, external files (e.g., BibTeX `.bib`) that are managed by tools like Zotero, Mendeley, etc.
    - **`txxt` does not format citation style.** The choice of style (APA, MLA, Chicago, etc.) is a presentational concern that belongs to the publishing tool at compile time, not the source document.
    - **The syntax must be minimal, unambiguous, and human-readable.**

2. The Proposed Solution

    The proposed system is a two-part model that relies on a document-level annotation to declare a bibliography and a simple, robust inline syntax for placing citations. This approach is heavily inspired by the proven success of Pandoc's citation handling.

    2.1. Part 1: Declaring the Bibliography

        A `txxt` document will declare its citation sources using a `bibliography` annotation, typically at the top of the file. The content of the annotation is the path to one or more standard BibTeX (`.bib`) files.

        :: bibliography :: references.bib

    2.2. Part 2: In-Text Citation Syntax

        To cite a work within the text, the author will use a citation key from the `.bib` file, prefixed with an `@` symbol and enclosed in square brackets.

        ...as Smith demonstrated in his seminal work on the topic [@smith2023].

        This syntax is ideal because:
        - **Unambiguous:** The `[@...]` syntax is distinct from a standard link `[...]` or a footnote `[1]`.
        - **Human-Readable:** `[@smith2023]` is easy for an author to type and immediately understand.
        - **Extensible:** It follows a well-established convention that supports advanced use cases like multiple citations `[@doe2024; @jones2025]` and page numbers `[@smith2023, p. 45]`.

3. A Complete Workflow Example

    This system is powerful because `txxt` itself does very little. It provides clean hooks for external tools to perform the complex work.

    3.1. The Citation Database (`references.bib`)

        This file is managed by a tool like Zotero.

        :
            @article{smith2023,
              author  = {John Smith},
              title   = {A Groundbreaking Study of TXXT},
              journal = {Journal of Plain Text Studies},
              year    = {2023},
              volume  = {1},
              pages   = {1-10}
            }
        (bibtex)

    3.2. The `txxt` Document (`paper.txxt`)

        :: bibliography :: references.bib

        1. Introduction

            The simplicity of plain text formats is a topic of great interest [@smith2023]. This approach has been explored extensively by multiple researchers [@john,smith] and validated through empirical studies [@jones2024, p.45-67]. 

            Session [#3.2] provides additional context on implementation details, while the foundational concepts can be found on [p.12-15] of the referenced manual.

        References

    3.3. The Publishing Tool

        When an author compiles their document, the publishing tool performs the following steps:
        1. Reads `paper.txxt`.
        2. Sees the `:: bibliography :: references.bib` annotation and loads the `.bib` file.
        3. Scans the document for citation markers:
           - `[@key]` citations for bibliographic references
           - `[#session]` for session references
           - `[p.X]` and variants for page references
        4. Uses a standard citation engine (like a CSL processor) to look up the keys in the `.bib` file.
        5. Replaces citation markers with correctly styled citations:
           - `[@smith2023]` → "(Smith, 2023)"
           - `[@john, p.45]` → "(John, p. 45)"
           - `[#3.2]` → "Section 3.2"
           - `[p.43,44]` → "pages 43-44"
        6. Automatically generates a fully formatted bibliography under the "References" session.

4. Conclusion: The `txxt` Way

    This approach is ideal for `txxt` because it avoids getting buried in specifics.
    - The `txxt` parser only needs to recognize the `bibliography` annotation and the `[@key]` syntax. It requires no knowledge of BibTeX or citation styles.
    - It **delegates** the complex, domain-specific work to the mature, existing ecosystem of citation tools.
    - It keeps the author's source file **semantically pure**, containing a timeless link to a piece of data, not a transient, style-dependent piece of presentation.

    This is the definition of "integrating well."